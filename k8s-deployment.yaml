apiVersion: apps/v1
kind: Deployment
metadata:
  name: digitalcast-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: digitalcast-ui
  template:
    metadata:
      labels:
        app: digitalcast-ui
    spec:
      containers:
      # Flask application container
      - name: digitalcast-ui
        image: gcr.io/dcsc2024-437017/digitalcast-ui:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "127.0.0.1"  # Use the Cloud SQL Proxy to connect
        - name: DB_NAME
          value: "digitalcast"
        - name: DB_USER
          value: "admin"
        - name: DB_PASSWORD
          value: "12345"
        - name: GCS_BUCKET
          value: "digitalcast-bucket"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/secrets/key-file.json"
        - name: PUBSUB_TOPIC
          value: "signage-queue"
        - name: GCP_PROJECT
          value: "dcsc2024-437017"
        - name: TZ
          value: "America/Denver"  # Set timezone to Denver
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /cloudsql
        - name: gcs-key
          mountPath: /secrets
          readOnly: true
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true

      # Cloud SQL Proxy container
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.33.2
        command:
        - "/cloud_sql_proxy"
        args:
        - "--dir=/cloudsql"
        - "--instances=dcsc2024-437017:us-central1:digitalcast-postgres=tcp:5432"
        - "--credential_file=/secrets/key-file.json"
        env:
        - name: TZ
          value: "America/Denver"  # Set timezone to Denver
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /cloudsql
        - name: gcs-key
          mountPath: /secrets
          readOnly: true
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true

      # Worker container
      - name: worker
        image: gcr.io/dcsc2024-437017/digitalcast-worker:latest
        env:
        - name: PUBSUB_SUBSCRIPTION
          value: "signage-queue-sub"
        - name: GCP_PROJECT
          value: "dcsc2024-437017"
        - name: TZ
          value: "America/Denver"  # Set timezone to Denver
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true

      # Display container for rendering media
      - name: display
        image: gcr.io/dcsc2024-437017/digitalcast-display:latest
        ports:
        - containerPort: 8081
        env:
        - name: DB_HOST
          value: "127.0.0.1"  # Use the Cloud SQL Proxy to connect
        - name: DB_NAME
          value: "digitalcast"
        - name: DB_USER
          value: "admin"
        - name: DB_PASSWORD
          value: "12345"
        - name: GCS_BUCKET
          value: "digitalcast-bucket"
        - name: TZ
          value: "America/Denver"  # Set timezone to Denver
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /cloudsql
        - name: gcs-key
          mountPath: /secrets
          readOnly: true
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true

      # Volumes for Cloud SQL Proxy and Secrets
      volumes:
      - name: cloudsql-instance-credentials
        emptyDir: {}
      - name: gcs-key
        secret:
          secretName: gcs-key-secret
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/America/Denver
          type: File  # Ensure it's explicitly specified as a file
---
apiVersion: v1
kind: Service
metadata:
  name: digitalcast-ui
  annotations:
    cloud.google.com/load-balancer-type: "External"  # Use GCP external LB
spec:
  type: LoadBalancer
  selector:
    app: digitalcast-ui
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: digitalcast-display
  annotations:
    cloud.google.com/load-balancer-type: "External"
spec:
  type: LoadBalancer
  selector:
    app: digitalcast-ui
  ports:
  - protocol: TCP
    port: 80  # Ensure this matches the LB port
    targetPort: 8081  # Flask app port
